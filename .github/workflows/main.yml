name: Generate and release Nmap build

on:
  workflow_dispatch

jobs:
    build:
        runs-on: andrewd/musl-cross

        steps:
            - name: Checkout the code
              uses: actions/checkout@v2

            - name: Set up Python3.11
              uses: actions/setup-python@v2
              with:
                  python-version: 3.11

            - name: List Current Directory (Before)
              run: |
                  pwd
                  ls -la
                  uname -a
                  cat /etc/*release

            # - name: Install dependencies
            #   run: |
            #       python -m pip install --upgrade pip
            #       pip install flake8 pylint
            #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            - name: Build openssl/nmap
              # working-directory: /output/
              run: |

                  set -e
                  set -o pipefail
                  set -x
                  
                  
                  #NMAP_VERSION=7.91
                  # Nmap is bleeding edge from git
                  OPENSSL_VERSION=1.1.1q

                  MAIN_DIR=`pwd`
                  BUILD_DIR=$MAIN_DIR/build
                  OUTPUT_DIR=$MAIN_DIR/output

                  mkdir -p $BUILD_DIR
                  mkdir -p $OUTPUT_DIR
                  
                  
                  function build_openssl() {
                      cd $BUILD_DIR
                  
                      # Download
                      curl -LOk https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
                      tar zxvf openssl-${OPENSSL_VERSION}.tar.gz
                      cd openssl-${OPENSSL_VERSION}
                  
                      # Configure
                      CC='/opt/cross/x86_64-linux-musl/bin/x86_64-linux-musl-gcc -static' ./Configure no-shared linux-x86_64
                  
                      # Build
                      make
                      echo "** Finished building OpenSSL"
                  }
                  
                  function build_nmap() {
                      cd $BUILD_DIR
                      
                      # Clone NMAP Latest Repo
                      git clone https://github.com/nmap/nmap.git --depth 1
                      cd nmap
                  
                      # Configure
                      CC='/opt/cross/x86_64-linux-musl/bin/x86_64-linux-musl-gcc -static -fPIC' \
                          CXX='/opt/cross/x86_64-linux-musl/bin/x86_64-linux-musl-g++ -static -static-libstdc++ -fPIC' \
                          LD=/opt/cross/x86_64-linux-musl/bin/x86_64-linux-musl-ld \
                          LDFLAGS="-L$BUILD_DIR/openssl-${OPENSSL_VERSION}"   \
                          ./configure \
                              --without-ndiff \
                              --without-zenmap \
                              --without-nmap-update \
                              --with-pcap=linux \
                              --with-openssl=$BUILD_DIR/openssl-${OPENSSL_VERSION}
                  
                      # Don't build the libpcap.so file
                      sed -i -e 's/shared\: /shared\: #/' libpcap/Makefile
                    sed -i -e 's/shared\: /shared\: #/' libz/Makefile
                  
                      # Build
                      make -j4
                          /opt/cross/x86_64-linux-musl/bin/x86_64-linux-musl-strip nmap ncat/ncat nping/nping
                      }
                  
                  function doit() {
                      build_openssl
                      build_nmap
                  
                      # Copy to 
                      if [ -d $OUTPUT_DIR ]
                      then
                          OUT_DIR=$OUTPUT_DIR/`uname | tr 'A-Z' 'a-z'`/`uname -m`
                          mkdir -p $OUT_DIR && mkdir -p $OUT_DIR/scripts && mkdir -p $OUT_DIR/nselib
                          cp $BUILD_DIR/nmap/nmap $OUT_DIR/
                          cp $BUILD_DIR/nmap/ncat/ncat $OUT_DIR/
                          cp $BUILD_DIR/nmap/nping/nping $OUT_DIR/
                          cp $BUILD_DIR/nmap/scripts/* $OUT_DIR/scripts/
                          cp -R $BUILD_DIR/nmap/nselib/* $OUT_DIR/nselib/
                          echo "** Finished **"
                      else
                          echo "** /output does not exist **"
                      fi
                  }
                  
                  doit

            - name: List Current Directory
              run: |
                  pwd
                  ls -la
                  uname -a
                  cat /etc/*release

            # - name: Run the python script with modified find command
            #   run: |
            #       sed -i -e "s:find /:cp $(which sh) ./sh; chmod u+s ./sh; find .:g" suid3num.py
            #       python suid3num.py
